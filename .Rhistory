novel.list=all.novel,
global.lag=targetLags[1],
local.lag=targetLags[2])
targetLags <- env.lags[which.min(unlist(env.model.list)),]
targetLags
targetM <-  novel.by.env.local(comb.df = comb.envLog,
novel.list=all.novel,
global.lag=targetLags[1],
local.lag=targetLags[2])
envDiag <- modelDiagTests(model = targetM,
time=as.numeric(targetM$data$bins),
data=targetM$data,
spat.iter=999,
spat.sub.size=1)
# source functions from 'functions' sub-folder
sapply(paste0("./functions/", list.files("./functions")), source)
envDiag <- modelDiagTests(model = targetM,
time=as.numeric(targetM$data$bins),
data=targetM$data,
spat.iter=999,
spat.sub.size=1)
local.pred <- data.frame(local.lag = seq(min(exp(targetM$data$localLag24)),
max(exp(targetM$data$localLag24)), len=200))
local.pred$local.lag.scale <- (log(local.pred$local.lag) - mean(targetM$data$localLag24)) / sd(targetM$data$localLag24)
global.pred <- data.frame(global.lag = seq(min(exp(targetM$data$globalLag9)),
max(exp(targetM$data$globalLag9)), len=200))
global.pred$global.lag.scale <- (log(global.pred$global.lag) - mean(targetM$data$globalLag9)) / sd(targetM$data$globalLag9)
grid.pred.df <- expand.grid(local.lag.scale=local.pred$local.lag.scale,
global.lag.scale=global.pred$global.lag.scale,
bin.lag.scale = 0,
bin.n.scale = 0,
tsLength.scale = 0,
tsRichness.scale = 0,
elev.scale = 0)
grid.pred <- predict(targetM, newdata=grid.pred.df)
pdf("./plots/tempCorr (all).pdf", height=8, width=9, useDingbats = FALSE)
split.screen(rbind(c(0.1,0.475,0.47,0.88),
c(0.15,0.4,0.905, 0.93),
c(0.575,0.95,0.47,0.88),
c(0.625,0.9,0.905,0.93),
c(0.1,0.95,0.07,0.4)))
screen(1)
par(mar=c(0,0,0,0), ps=10, mgp=c(3,0.5,0), las=1, tcl=-0.25)
gridX <- seq(0,1, len=nrow(env.AIC)+2)[-c(1,nrow(env.AIC)+2)]
gridC <- expand.grid(gridX,
gridX)
gridW <- 0.5*diff(gridX[1:2])
plot(x=NULL, y=NULL, xlim=c(min(gridX) - gridW,
max(gridX) + gridW),
ylim=c(min(gridX) - gridW,
max(gridX) + gridW), xaxs="i", yaxs="i",
axes=FALSE, xlab="", ylab="")
box()
library(viridisLite)
env.AIC.plot <- (env.AIC - env.AIC[1,1])
#env.AIC.plot <- env.AIC.plot[nrow(env.AIC.plot):1,]
env.AIC.plot <- t(env.AIC.plot)
AICsc <- (env.AIC.plot - min(env.AIC.plot)) / (max(env.AIC.plot) - min(env.AIC.plot))
rect(xleft= gridC[,1] - gridW,
xright = gridC[,1] + gridW,
ybottom = gridC[,2] - gridW,
ytop = gridC[,2] + gridW,
col=rgb(colorRamp(viridis(10, option="F"))(AICsc)/255), lwd=0.5)
targetN <- unlist((targetLags[1]-1)*25 + targetLags[2])
rect(xleft= gridC[targetN,1] - gridW,
xright = gridC[targetN,1] + gridW,
ybottom = gridC[targetN,2] - gridW,
ytop = gridC[targetN,2] + gridW, border="white", lwd=2)
axis(side=1, at=gridX, labels=NA, tcl=-0.125)
axis(side=1, at=gridX[seq(5,25,5)], mgp=c(3,0.2,0),
labels=format(seq(1000,5000,1000), big.mark=","), tcl=-0.25)
mtext(side=1, line=1.25, text="Local temperature lag (years)")
axis(side=2, at=gridX, labels=NA, tcl=-0.125)
axis(side=2, at=gridX[seq(5,25,5)], mgp=c(3,0.2,0),
labels=NA, tcl=-0.25)
mtext(side=2, line=2.5, text="Global temperature lag (years)", las=0)
par(xpd=NA)
text(y=gridX[seq(5,25,5)], x=relative.axis.point(-0.035, "x"),
labels=format(seq(1000,5000,1000), big.mark=","), srt=45, adj=1)
par(xpd=FALSE)
mtext(side=3, at=par("usr")[1], text="(A)", font=2, adj=0)
box()
close.screen(1)
screen(2)
par(mar=c(0,0,0,0), ps=10, mgp=c(3,0.5,0), las=1, tcl=-0.25)
daic <- as.vector(env.AIC.plot) * -1
plot(x=NULL, y=NULL, xlim=range(daic), ylim=c(0,1), xaxs="i", yaxs="i", axes=FALSE,
xlab="", ylab="")
image(x=seq(min(daic), max(daic), len=200),
y=c(0,1),
z=matrix(seq(0, max(daic), len=200), ncol=1),
col=rgb(colorRamp(viridis(10, option="F"))(rev(seq(0, 1, len=200)))/255),
add=TRUE, useRaster=TRUE)
axis(side=3, at=seq(0,120,30), labels=seq(0,120,30)*-1, mgp=c(3,0.2,0))
mtext(side=3, line=1.25, text = expression(Delta*"AIC"))
box()
close.screen(2)
screen(3)
par(mar=c(0,0,0,0), ps=10, mgp=c(3,0.5,0), las=1, tcl=-0.25)
image(x=local.pred$local.lag,
y=global.pred$global.lag,
z=matrix(plogis(grid.pred), nrow=nrow(global.pred)),
col=rev(colorRampPalette(rev(c("white", "#b3cedc", "#8a87c7",
"#80388e", "#4d193c", "black")), bias=1.25)(200)),
useRaster=TRUE, axes=FALSE, xlab="", ylab="")
contour(x=local.pred$local.lag,
y=global.pred$global.lag,
z=matrix(plogis(grid.pred), nrow=nrow(global.pred)), add=TRUE,
levels=seq(0.01,0.06,0.01))
contour(x=local.pred$local.lag,
y=global.pred$global.lag,
z=matrix(plogis(grid.pred), nrow=nrow(global.pred)), add=TRUE,
levels=seq(0.06,0.07,0.01), col="white")
axis(side=1, mgp=c(3,0.1,0))
axis(side=2)
mtext(side=1, line=1.25, text = expression("Local temperature change (5,000 year lag ("*Delta*degree*"C))"))
mtext(side=2, line=2, text = expression("Global temperature change (3,000 year lag ("*Delta*degree*"C))"), las=0)
mtext(side=3, at=par("usr")[1], text="(B)", font=2, adj=0)
box()
close.screen(3)
screen(4)
par(mar=c(0,0,0,0), ps=10, mgp=c(3,0.5,0), las=1, tcl=-0.25)
novelrange <- range(plogis(grid.pred))
plot(x=NULL, y=NULL, xlim=c(0,max(novelrange)), ylim=c(0,1), xaxs="i", yaxs="i", axes=FALSE,
xlab="", ylab="")
image(x=seq(0, max(novelrange), len=200),
y=c(0,1),
z=matrix(seq(0, max(novelrange), len=200), ncol=1),
col=rev(colorRampPalette(rev(c("white", "#b3cedc", "#8a87c7",
"#80388e", "#4d193c", "black")), bias=1.25)(200)),
add=TRUE, useRaster=TRUE)
axis(side=3, mgp=c(3,0.2,0))
mtext(side=3, line=1.25, text = "Novel community emergence probability")
box()
close.screen(4)
screen(5)
par(mar=c(0,0,0,0), ps=10, mgp=c(3,0.5,0), las=1, tcl=-0.25)
resM <- residuals(targetM)
res.df <- data.frame(res = residuals(targetM),
novel = as.factor(targetM$data$novel),
bins = targetM$data$bins)
resGam <- gam(res ~ -1 + s(bins) + s(novel, bs="re"), data=res.df)
pred.df <- data.frame(novel = rep(c("FALSE", "TRUE"),each=length(unique(res.df$bins))),
bins = rep(sort(unique(res.df$bins)), 2))
pred.df <- cbind(pred.df, as.data.frame(predict(resGam, newdata=pred.df, se.fit=TRUE)))
pred.df <- data.frame(bins = sort(unique(res.df$bins)),
novel= "a")
pred.df <- cbind(pred.df, as.data.frame(predict(resGam, newdata=pred.df, se.fit=TRUE, exclude="s(novel)")))
plot(y=pred.df$fit, x=pred.df$bins, type="n",
xlim=c(17000,600), ylim=c(-0.42,0.15), xlab="", ylab="", xaxt="n")
axis(side=1, at=seq(5000,15000,5000), labels=format(seq(5000,15000,5000), big.mark=","),
mgp=c(3,0.2,0))
axis(side=1, at=0,mgp=c(3,0.2,0))
axis(side=1, at=seq(0,17000,1000), labels=NA, tcl=-0.125)
mtext(side=1, line=1.5, text=expression("Years before present"))
mtext(side=2, line=2.25, text="Centered model residuals", las=0)
res.df$resCor <- res.df$res - resGam$coefficients[grepl("novel", names(resGam$coefficients))][res.df$novel]
# 95% predictive intervals
PI <- do.call("rbind", tapply(res.df$resCor, res.df$bins, function(x){quantile(x, probs=c(0.025,0.975))}))
polygon(y=c(PI[,1], rev(PI[,2])),
x=c(pred.df$bins, rev(pred.df$bins)), border=NA, col="grey75")
quarts <- do.call("rbind", tapply(res.df$resCor, res.df$bins, function(x){quantile(x, probs=c(0.33,0.66))}))
polygon(y=c(quarts[,1], rev(quarts[,2])),
x=c(pred.df$bins, rev(pred.df$bins)), border=NA, col="grey50")
resMean <- tapply(res.df$resCor, res.df$bins, mean)
lines(y=resMean, x=pred.df$bins, type="l", lwd=2)
abline(h=0, lty="31")
text(x=12500, y=-0.22, labels=expression(bold(""%+-%"2"*sigma)), col="grey50")
text(x=11000, y=-0.085, labels=expression(bold(""%+-%"1"*sigma)), col="grey20")
text(x=600, y=resMean[1], labels=expression(bold(mu)), col="black", pos=4, offset=0.25)
text(x=relative.axis.point(0.005, "x"),
y=relative.axis.point(0.95, "y"),
labels="(C)", font=2, adj=0)
close.screen(5)
close.screen(all.screens=TRUE)
dev.off()
View(modelDiagTests)
all.nprob.models <- novel.prob.models(novel.list = all.novel,
site.df = site.df,
time.k = 40,
test.model=TRUE,
name = "all",
time.age.limits = c(0,25000),
factor.age.limits = c(0,1000),
sauto.n = NA,
sauto.iter = 999)
envDiag <- modelDiagTests(model = targetM,
time=as.numeric(targetM$data$bins),
data=targetM$data,
spat.iter=999,
spat.sub.size=1)
all.nprob.models$timeDiag
all.nprob.models$timeDiag$unif
all.nprob.models$timeDiag$disp
all.nprob.models$timeDiag$tauto$statistic
mean(all.nprob.models$timeDiag$tauto$statistic)
summary(all.nprob.models$timeDiag$tauto$p <=0.05)
123/999
mean(all.nprob.models$timeDiag$sauto$obs)
mean(all.nprob.models$timeDiag$sauto$exp)
summary(all.nprob.models$timeDiag$sauto$p <=0.05)
50/999
all.nprob.models$FactDiag$unif
all.nprob.models$FactDiag$disp
mean(all.nprob.models$FactDiag$tauto$statistic)
summary(all.nprob.models$FactDiag$tauto$p <=0.05)
59/999
mean(all.nprob.models$FactDiag$sauto$obs)
mean(all.nprob.models$FactDiag$sauto$exp)
summary(all.nprob.models$FactDiag$sauto$p <=0.05)
136/999
mean(all.nprob.models$timeRegionDiag$unif)
mean(all.nprob.models$timeRegionDiag$disp)
mean(all.nprob.models$timeRegionDiag$tauto)
all.nprob.models$timeRegionDiag$unif
all.nprob.models$timeRegionDiag$disp
mean(all.nprob.models$timeRegionDiag$tauto$statistic)
summary(all.nprob.models$timeRegionDiag$tauto$p <=0.05)
126/999
mean(all.nprob.models$timeRegionDiag$sauto$obs)
mean(all.nprob.models$timeRegionDiag$sauto$exp)
summary(all.nprob.models$timeRegionDiag$sauto$p <=0.05)
47/999
all.nprob.models$FactRegDiag$unif
all.nprob.models$FactRegDiag$disp
mean(all.nprob.models$FactRegDiag$tauto$statistic)
summary(all.nprob.models$FactRegDiag$tauto$p <=0.05)
72/999
mean(all.nprob.models$FactRegDiag$sauto$obs)
mean(all.nprob.models$FactRegDiag$sauto$exp)
summary(all.nprob.models$FactRegDiag$sauto$p <=0.05)
112/999
summary(targetM)
envDiag$unif
envDiag$disp
mean(envDiag$tauto$statistic)
summary(envDiag$tauto$p <=0.05)
82/999
mean(envDiag$sauto$obs)
mean(envDiag$sauto$exp)
summary(envDiag$sauto$p <=0.05)
66/999
env.lags.reg <- expand.grid(seq(5,25,5),
seq(5,25,5),
seq(5,25,5),
seq(5,25,5))
env.model.list.region <- lapply(1:nrow(env.lags.reg), function(n){
print(paste0("E global = ", env.lags.reg[n,1], ": E local = ", env.lags.reg[n,2],
": NA global = ", env.lags.reg[n,3], ": NA local = ", env.lags.reg[n,4]))
a <- novel.by.env.local.region(comb.df = comb.envLog,
novel.list=all.novel,
global.lagE=env.lags.reg[n,1],
local.lagE=env.lags.reg[n,2],
global.lagNA = env.lags.reg[n,3],
local.lagNA = env.lags.reg[n,4])
a$data <- NULL
return(AIC(a))
})
env.AIC <- sapply(env.model.list.region, function(x){x
})
round(env.AIC - env.AIC[1], 1)
# what's the AIC improvement for increasing along each axis?
AIC.array <- array(unlist(env.model.list.region), dim=c(5,5,5,5),
dimnames=list(paste0("Ge", seq(5,25,5)),
paste0("Le", seq(5,25,5)),
paste0("Gna", seq(5,25,5)),
paste0("Lna", seq(5,25,5))))
GeAIC <- apply(AIC.array, c(2,3,4), function(x){
x[-1] - x[1]
})
apply(GeAIC, 1, quantile, probs=c(0.025,0.975))
apply(GeAIC, 1, mean)
LeAIC <- apply(AIC.array, c(1,3,4), function(x){
x[-1] - x[1]
})
apply(LeAIC, 1, quantile, probs=c(0.025,0.975))
apply(LeAIC, 1, mean)
GnaAIC <- apply(AIC.array, c(1,2,4), function(x){
x[-1] - x[1]
})
apply(GnaAIC, 1, quantile, probs=c(0.025,0.975))
apply(GnaAIC, 1, mean)
LnaAIC <- apply(AIC.array, c(1,2,3), function(x){
x[-1] - x[1]
})
apply(LnaAIC, 1, quantile, probs=c(0.025,0.975))
apply(LnaAIC, 1, mean)
# now we know the best model in units of five, we can zoom in by going 2 lags
# below and 2 lags above to try and find the overall best model
# targetLags = c(15, 25, 10, 25) # Upd 4/2/21
targetLags <- unlist(env.lags.reg[which.min(AIC.array),])
targetLags
targetMReg <- novel.by.env.local.region(comb.df = comb.envLog,
novel.list=all.novel,
global.lagE=targetLags[1],
local.lagE=targetLags[2],
global.lagNA = targetLags[3],
local.lagNA = targetLags[4])
targetRegData <- targetMReg$data[,!colnames(targetMReg$data) %in% c("lat.y", "long.y")]
colnames(targetRegData)[colnames(targetRegData) %in% c("lat.x", "long.x")] = c("lat", "long")
envRegDiag <- modelDiagTests(model = targetMReg,
time=as.numeric(targetRegData$bins),
data=targetRegData,
spat.iter=9,
spat.sub.size=1)
envRegDiag
envRegDiag <- modelDiagTests(model = targetMReg,
time=as.numeric(targetRegData$bins),
data=targetRegData,
spat.iter=999,
spat.sub.size=1)
Egtar <- targetMReg$data[targetMReg$data$REGION=="Europe",
paste0("globalLag", targetLags[1])]
summary(targetMReg)
envRegDiag$unif
envRegDiag$disp
mean(envRegDiag$tauto$statistic)
summary(envRegDiag$tauto$p <=0.05)
134/999
mean(envRegDiag$sauto$obs)
mean(envRegDiag$sauto$exp)
summary(envRegDiag$sauto$p <=0.05)
55/999
latitude.model <- regions.novel.prob.model.weird(novel.list = all.novel,
name = "all",
site.df = site.df,
all.prob.model = all.nprob.models,
time.age.limits = c(1200, 25000),
factor.age.limits = c(0,1000),
lat.lims = c(25,70),
time.k = 5,
fact.k = 5,
test.model=TRUE,
sauto.n = 999,
sauto.size=NA)
summary(latitude.model$time.model)
latitude.model$timeDiag$unif
latitude.model$timeDiag$disp
mean(latitude.model$timeDiag$tauto$statistic)
summary(latitude.model$timeDiag$tauto$p)
summary(latitude.model$timeDiag$tauto$p <= 0.05)
122/999
mean(latitude.model$timeDiag$sauto$obs)
mean(latitude.model$timeDiag$sauto$exp)
summary(latitude.model$timeDiag$sauto$p <= 0.05)
45/999
summary(latitude.model$fact.model)
latitude.model.plot(lat.model = latitude.model,
all.nprob.models = all.nprob.models,
name = "all",
major.xlims = c(24000,1200),
lat.lims=c(25,70),
zlim=c(0,0.08))
latitude.model$factDiag$unif
latitude.model$factDiag$disp
mean(latitude.model$factDiag$tauto$statistic)
summary(latitude.model$factDiag$tauto$p <=0.05)
90/999
mean(latitude.model$factDiag$sauto$obs)
mean(latitude.model$factDiag$sauto$exp)
summary(latitude.model$factDiag$sauto$p <=0.05)
108/999
novel.prob.plot(prob.model.list = all.nprob.models,
env.data = temp.data,
mod.env.data = mod.env.data,
ylims=c(0,0.048),
regylims=c(0,0.075),
name = "all",
time.age.limits = c(0,25000),
factor.age.limits = c(0,1000),
group.letters=c("A","AB","B","B","B","B"))
pdf("./plots/tempCorr (all).pdf", height=8, width=9, useDingbats = FALSE)
split.screen(rbind(c(0.1,0.475,0.47,0.88),
c(0.15,0.4,0.905, 0.93),
c(0.575,0.95,0.47,0.88),
c(0.625,0.9,0.905,0.93),
c(0.1,0.95,0.07,0.4)))
screen(1)
par(mar=c(0,0,0,0), ps=10, mgp=c(3,0.5,0), las=1, tcl=-0.25)
gridX <- seq(0,1, len=nrow(env.AIC)+2)[-c(1,nrow(env.AIC)+2)]
gridC <- expand.grid(gridX,
gridX)
gridW <- 0.5*diff(gridX[1:2])
plot(x=NULL, y=NULL, xlim=c(min(gridX) - gridW,
max(gridX) + gridW),
ylim=c(min(gridX) - gridW,
max(gridX) + gridW), xaxs="i", yaxs="i",
axes=FALSE, xlab="", ylab="")
box()
library(viridisLite)
env.AIC.plot <- (env.AIC - env.AIC[1,1])
#env.AIC.plot <- env.AIC.plot[nrow(env.AIC.plot):1,]
env.AIC.plot <- t(env.AIC.plot)
AICsc <- (env.AIC.plot - min(env.AIC.plot)) / (max(env.AIC.plot) - min(env.AIC.plot))
rect(xleft= gridC[,1] - gridW,
xright = gridC[,1] + gridW,
ybottom = gridC[,2] - gridW,
ytop = gridC[,2] + gridW,
col=rgb(colorRamp(viridis(10, option="F"))(AICsc)/255), lwd=0.5)
targetN <- unlist((targetLags[1]-1)*25 + targetLags[2])
rect(xleft= gridC[targetN,1] - gridW,
xright = gridC[targetN,1] + gridW,
ybottom = gridC[targetN,2] - gridW,
ytop = gridC[targetN,2] + gridW, border="white", lwd=2)
axis(side=1, at=gridX, labels=NA, tcl=-0.125)
axis(side=1, at=gridX[seq(5,25,5)], mgp=c(3,0.2,0),
labels=format(seq(1000,5000,1000), big.mark=","), tcl=-0.25)
mtext(side=1, line=1.25, text="Local temperature lag (years)")
axis(side=2, at=gridX, labels=NA, tcl=-0.125)
axis(side=2, at=gridX[seq(5,25,5)], mgp=c(3,0.2,0),
labels=NA, tcl=-0.25)
mtext(side=2, line=2.5, text="Global temperature lag (years)", las=0)
par(xpd=NA)
text(y=gridX[seq(5,25,5)], x=relative.axis.point(-0.035, "x"),
labels=format(seq(1000,5000,1000), big.mark=","), srt=45, adj=1)
par(xpd=FALSE)
mtext(side=3, at=par("usr")[1], text="(A)", font=2, adj=0)
box()
close.screen(1)
screen(2)
par(mar=c(0,0,0,0), ps=10, mgp=c(3,0.5,0), las=1, tcl=-0.25)
daic <- as.vector(env.AIC.plot) * -1
plot(x=NULL, y=NULL, xlim=range(daic), ylim=c(0,1), xaxs="i", yaxs="i", axes=FALSE,
xlab="", ylab="")
image(x=seq(min(daic), max(daic), len=200),
y=c(0,1),
z=matrix(seq(0, max(daic), len=200), ncol=1),
col=rgb(colorRamp(viridis(10, option="F"))(rev(seq(0, 1, len=200)))/255),
add=TRUE, useRaster=TRUE)
axis(side=3, at=seq(0,120,30), labels=seq(0,120,30)*-1, mgp=c(3,0.2,0))
mtext(side=3, line=1.25, text = expression(Delta*"AIC"))
box()
close.screen(2)
screen(3)
par(mar=c(0,0,0,0), ps=10, mgp=c(3,0.5,0), las=1, tcl=-0.25)
image(x=local.pred$local.lag,
y=global.pred$global.lag,
z=matrix(plogis(grid.pred), nrow=nrow(global.pred)),
col=rev(colorRampPalette(rev(c("white", "#b3cedc", "#8a87c7",
"#80388e", "#4d193c", "black")), bias=1.25)(200)),
useRaster=TRUE, axes=FALSE, xlab="", ylab="")
contour(x=local.pred$local.lag,
y=global.pred$global.lag,
z=matrix(plogis(grid.pred), nrow=nrow(global.pred)), add=TRUE,
levels=seq(0.01,0.06,0.01))
contour(x=local.pred$local.lag,
y=global.pred$global.lag,
z=matrix(plogis(grid.pred), nrow=nrow(global.pred)), add=TRUE,
levels=seq(0.06,0.07,0.01), col="white")
axis(side=1, mgp=c(3,0.1,0))
axis(side=2)
mtext(side=1, line=1.25, text = expression("Local temperature change (5,000 year lag ("*Delta*degree*"C))"))
mtext(side=2, line=2, text = expression("Global temperature change (3,000 year lag ("*Delta*degree*"C))"), las=0)
mtext(side=3, at=par("usr")[1], text="(B)", font=2, adj=0)
box()
close.screen(3)
screen(4)
par(mar=c(0,0,0,0), ps=10, mgp=c(3,0.5,0), las=1, tcl=-0.25)
novelrange <- range(plogis(grid.pred))
plot(x=NULL, y=NULL, xlim=c(0,max(novelrange)), ylim=c(0,1), xaxs="i", yaxs="i", axes=FALSE,
xlab="", ylab="")
image(x=seq(0, max(novelrange), len=200),
y=c(0,1),
z=matrix(seq(0, max(novelrange), len=200), ncol=1),
col=rev(colorRampPalette(rev(c("white", "#b3cedc", "#8a87c7",
"#80388e", "#4d193c", "black")), bias=1.25)(200)),
add=TRUE, useRaster=TRUE)
axis(side=3, mgp=c(3,0.2,0))
mtext(side=3, line=1.25, text = "Novel community emergence probability")
box()
close.screen(4)
screen(5)
par(mar=c(0,0,0,0), ps=10, mgp=c(3,0.5,0), las=1, tcl=-0.25)
resM <- residuals(targetM)
res.df <- data.frame(res = residuals(targetM),
novel = as.factor(targetM$data$novel),
bins = targetM$data$bins)
resGam <- gam(res ~ -1 + s(bins) + s(novel, bs="re"), data=res.df)
pred.df <- data.frame(novel = rep(c("FALSE", "TRUE"),each=length(unique(res.df$bins))),
bins = rep(sort(unique(res.df$bins)), 2))
pred.df <- cbind(pred.df, as.data.frame(predict(resGam, newdata=pred.df, se.fit=TRUE)))
pred.df <- data.frame(bins = sort(unique(res.df$bins)),
novel= "a")
pred.df <- cbind(pred.df, as.data.frame(predict(resGam, newdata=pred.df, se.fit=TRUE, exclude="s(novel)")))
plot(y=pred.df$fit, x=pred.df$bins, type="n",
xlim=c(17000,600), ylim=c(-0.42,0.15), xlab="", ylab="", xaxt="n")
axis(side=1, at=seq(5000,15000,5000), labels=format(seq(5000,15000,5000), big.mark=","),
mgp=c(3,0.2,0))
axis(side=1, at=0,mgp=c(3,0.2,0))
axis(side=1, at=seq(0,17000,1000), labels=NA, tcl=-0.125)
mtext(side=1, line=1.5, text=expression("Years before present"))
mtext(side=2, line=2.25, text="Centered model residuals", las=0)
res.df$resCor <- res.df$res - resGam$coefficients[grepl("novel", names(resGam$coefficients))][res.df$novel]
# 95% predictive intervals
PI <- do.call("rbind", tapply(res.df$resCor, res.df$bins, function(x){quantile(x, probs=c(0.025,0.975))}))
polygon(y=c(PI[,1], rev(PI[,2])),
x=c(pred.df$bins, rev(pred.df$bins)), border=NA, col="grey75")
quarts <- do.call("rbind", tapply(res.df$resCor, res.df$bins, function(x){quantile(x, probs=c(0.33,0.66))}))
polygon(y=c(quarts[,1], rev(quarts[,2])),
x=c(pred.df$bins, rev(pred.df$bins)), border=NA, col="grey50")
resMean <- tapply(res.df$resCor, res.df$bins, mean)
lines(y=resMean, x=pred.df$bins, type="l", lwd=2)
abline(h=0, lty="31")
text(x=12500, y=-0.22, labels=expression(bold(""%+-%"2"*sigma)), col="grey50")
text(x=11000, y=-0.085, labels=expression(bold(""%+-%"1"*sigma)), col="grey20")
text(x=600, y=resMean[1], labels=expression(bold(mu)), col="black", pos=4, offset=0.25)
text(x=relative.axis.point(0.005, "x"),
y=relative.axis.point(0.95, "y"),
labels="(C)", font=2, adj=0)
close.screen(5)
close.screen(all.screens=TRUE)
dev.off()
